package openadmin;

import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/*

Generated by

		System.out.println(String.format(">>>>> Module [%s], module control types IDs [%s]",
				moduleName,
				moduleControlTypes.stream()
						.map(item -> (String) item.get("id"))
						.collect(Collectors.joining(", "))));

>>>>> Module [Traffic Light], module control types IDs [0, 7, 39, 13]
>>>>> Module [Word Cloud], module control types IDs [0, 5, 54, 16, 17, 60, 57, 20, 33, 35, 45, 47, 48, 21, 23, 13]
>>>>> Module [BarChart], module control types IDs [0, 11, 13, 54, 16, 17, 20, 21, 36, 25, 35, 39]
>>>>> Module [Quick Links], module control types IDs []
>>>>> Module [Words Snapshot], module control types IDs [0, 16, 17, 5, 13, 44, 47, 47]
>>>>> Module [HTML], module control types IDs []
>>>>> Module [Line Graph], module control types IDs [0, 11, 13, 54, 16, 17, 20, 21, 36, 32, 35, 39]
>>>>> Module [Ranking Table], module control types IDs [0, 11, 54, 30, 13, 16, 17, 20, 21, 36, 39, 38, 3, 35]
>>>>> Module [Static Text], module control types IDs []
>>>>> Module [Emerging Topics], module control types IDs [0, 16, 17, 5, 13, 44, 47, 47]
>>>>> Module [Alerts], module control types IDs [0, 3, 11, 16, 17, 20, 21, 35, 13]
>>>>> Module [Recent Responses], module control types IDs [0, 11, 16, 17, 20, 13, 21, 34, 35, 47, 48, 39, 54]
>>>>> Module [Recent Social Media Responses], module control types IDs [0, 11, 16, 17, 20, 13, 21, 56, 35, 47, 48, 54]
>>>>> Module [Topic Investigator], module control types IDs [0, 5, 55, 16, 17, 20, 33, 49, 21, 22, 13, 47]
>>>>> Module [Ranker (multiple)], module control types IDs [0, 5, 13, 16, 20, 21, 38, 29, 39]
>>>>> Module [Comments Stream], module control types IDs [0, 11, 54, 16, 17, 20, 21, 33, 47, 48, 13]
>>>>> Module [Overall Perf. Table], module control types IDs [0, 11, 54, 30, 13, 16, 17, 20, 21, 36, 39, 38]
>>>>> Module [Ranker (single)], module control types IDs [0, 5, 13, 54, 16, 20, 21, 38, 25, 39]
>>>>> Module [SectionHeader], module control types IDs []
>>>>> Module [Topic Snapshot], module control types IDs [0, 16, 17, 5, 13, 44, 47, 47]

0 Segment unit
1 Social Data Source unit
2 Social Data Source and Unit unit
3 Segment Groups ranker
4 Segment Groups Hidden ranker
5 Timeperiod with Reporting Date time-period
6 Timeperiod (Analytics) time-period
7 Timeperiod with Analytics Only time-period
8 Timeperiod (Hidden) time-period
9 Timeperiod time-period
10 Timeperiod (without Reporting Date) time-period
11 Timeperiod (No Custom Timeperiods) time-period
12 Timeperiod (Invitations) time-period
13 Reporting Date reporting-date
14 Reporting Date (Hidden) reporting-date
15 Reporting Date (with Label) reporting-date
16 Segment Filter rate-by
17 Segment Filter 2 rate-by
18 Segment Filter (Invitations) rate-by
19 Segment Filter 2 (Invitations) rate-by
20 Custom Filter custom-filter
21 Custom Query custom-filter
22 Search custom-filter
23 Search (Response Investigatior) custom-filter
24 Question score
25 Question score
26 Question (No Social) score
27 Question (Social Only) score
28 Questions system-module
29 Questions (Ranker Snapshot) system-module
30 Questions (Score Table) system-module
31 Questions (Analytics) system-module
32 Questions (Social) system-module
33 Score score
34 Score (No Social) score
35 Alert alert
36 Columns group-by
37 Columns (Profiler) group-by
38 Benchmark benchmark
39 Calculation calculation
40 Calculation (Text Analytics) calculation
41 Crosstab Columns cross-tab
42 Crosstab Rows cross-tab
43 Comment Field survey-tag
44 Comment Field (Tag and Field Strict) survey-tag
45 Comment Field (Tag and Field) survey-tag
46 Comment Field (Strict) survey-tag
47 Category Filter survey-tag
48 Category Filter 2 survey-tag
49 Comment Filter (Topic Investigator 2) survey-tag
50 Topic Rank topic
51 Topic Group topic
52 Segment Ranker ranker
53 Segment Ranker ranker
54 Social Media Filter social-media
55 Social Media Filter (Surveys and Social) social-media
56 Social Media Filter (Social Only) social-media
57 Customer Filter custom-filter
58 Action Planner Outcome system-module
59 Action Planner Display system-module
60 Ask Now group-by
61 Category Filter social-media
62 Category Filter 2 social-media
63 Category Filter (Strict) social-media
64 Category Filter (No Sentiment) social-media
65 Category Filter (No Sentiment, Strict) social-media
66 Topic Rank topic
67 Topic Group topic

 */
public class ModulesControls {

	private static Map<String, String> controlMap = new HashMap<>();

	static {
		controlMap.put("0", "Segment"); // unit
		controlMap.put("1", "Social Data Source"); // unit
		controlMap.put("2", "Social Data Source and Unit"); // unit
		controlMap.put("3", "Segment Groups"); // ranker
		controlMap.put("4", "Segment Groups Hidden"); // ranker
		controlMap.put("5", "Timeperiod with Reporting Date"); // time-period
		controlMap.put("6", "Timeperiod (Analytics)"); // time-period
		controlMap.put("7", "Timeperiod with Analytics Only"); // time-period
		controlMap.put("8", "Timeperiod (Hidden)"); // time-period
		controlMap.put("9", "Timeperiod"); // time-period
		controlMap.put("10", "Timeperiod (without Reporting Date)"); // time-period
		controlMap.put("11", "Timeperiod (No Custom Timeperiods)"); // time-period
		controlMap.put("12", "Timeperiod (Invitations)"); //time-period
		controlMap.put("13", "Reporting Date"); // reporting-date
		controlMap.put("14", "Reporting Date (Hidden)"); //reporting-date
		controlMap.put("15", "Reporting Date (with Label)"); // reporting-date
		controlMap.put("16", "Segment Filter"); // rate-by
		controlMap.put("17", "Segment Filter 2"); // rate-by
		controlMap.put("18", "Segment Filter (Invitations)"); // rate-by
		controlMap.put("19", "Segment Filter 2 (Invitations)"); // rate-by
		controlMap.put("20", "Custom Filter"); // custom-filter
		controlMap.put("21", "Custom Query"); // custom-filter
		controlMap.put("22", "Search"); // custom-filter
		controlMap.put("23", "Search (Response Investigatior)"); // custom-filter
		controlMap.put("24", "Question"); // score
		controlMap.put("25", "Question"); // score
		controlMap.put("26", "Question (No Social)"); // score
		controlMap.put("27", "Question (Social Only)"); // score
		controlMap.put("28", "Questions"); // system-module
		controlMap.put("29", "Questions (Ranker Snapshot)"); // system-module
		controlMap.put("30", "Questions (Score Table)"); // system-module
		controlMap.put("31", "Questions (Analytics)"); // system-module
		controlMap.put("32", "Questions (Social)"); // system-module
		controlMap.put("33", "Score"); // score
		controlMap.put("34", "Score (No Social)"); // score
		controlMap.put("35", "Alert"); // alert
		controlMap.put("36", "Columns"); // group-by
		controlMap.put("37", "Columns (Profiler)"); // group-by
		controlMap.put("38", "Benchmark"); // benchmark
		controlMap.put("39", "Calculation"); // calculation
		controlMap.put("40", "Calculation (Text Analytics)"); // calculation
		controlMap.put("41", "Crosstab Columns"); // cross-tab
		controlMap.put("42", "Crosstab Rows"); // cross-tab
		controlMap.put("43", "Comment Field"); // survey-tag
		controlMap.put("44", "Comment Field (Tag and Field Strict)"); // survey-tag
		controlMap.put("45", "Comment Field (Tag and Field)"); // survey-tag
		controlMap.put("46", "Comment Field (Strict)"); // survey-tag
		controlMap.put("47", "Category Filter"); // survey-tag
		controlMap.put("48", "Category Filter 2"); // survey-tag
		controlMap.put("49", "Comment Filter (Topic Investigator 2)"); // survey-tag
		controlMap.put("50", "Topic Rank"); // topic
		controlMap.put("51", "Topic Group"); // topic
		controlMap.put("52", "Segment Ranker"); // ranker
		controlMap.put("53", "Segment Ranker"); // ranker
		controlMap.put("54", "Social Media Filter"); // social-media
		controlMap.put("55", "Social Media Filter (Surveys and Social)"); // social-media
		controlMap.put("56", "Social Media Filter (Social Only)"); // social-media
		controlMap.put("57", "Customer Filter"); // custom-filter
		controlMap.put("58", "Action Planner Outcome"); // system-module
		controlMap.put("59", "Action Planner Display"); // system-module
		controlMap.put("60", "Ask Now"); // group-by
		controlMap.put("61", "Category Filter"); // social-media
		controlMap.put("62", "Category Filter 2"); // social-media
		controlMap.put("63", "Category Filter (Strict)"); // social-media
		controlMap.put("64", "Category Filter (No Sentiment)"); // social-media
		controlMap.put("65", "Category Filter (No Sentiment, Strict)"); // social-media
		controlMap.put("66", "Topic Rank"); // topic
		controlMap.put("67", "Topic Group"); // topic
	}

	public static void main(String... args) {

		listControls("Traffic Light", "0, 7, 39, 13");
		listControls("Word Cloud", "0, 5, 54, 16, 17, 60, 57, 20, 33, 35, 45, 47, 48, 21, 23, 13");
		listControls("BarChart", "0, 11, 13, 54, 16, 17, 20, 21, 36, 25, 35, 39");
		listControls("Quick Links", "");
		listControls("Words Snapshot", "0, 16, 17, 5, 13, 44, 47, 47");
		listControls("HTML", "");
		listControls("Line Graph", "0, 11, 13, 54, 16, 17, 20, 21, 36, 32, 35, 39");
		listControls("Ranking Table", "0, 11, 54, 30, 13, 16, 17, 20, 21, 36, 39, 38, 3, 35");
		listControls("Static Text", "");
		listControls("Emerging Topics", "0, 16, 17, 5, 13, 44, 47, 47");
		listControls("Alerts", "0, 3, 11, 16, 17, 20, 21, 35, 13");
		listControls("Recent Responses", "0, 11, 16, 17, 20, 13, 21, 34, 35, 47, 48, 39, 54");
		listControls("Recent Social Media Responses", "0, 11, 16, 17, 20, 13, 21, 56, 35, 47, 48, 54");
		listControls("Topic Investigator", "0, 5, 55, 16, 17, 20, 33, 49, 21, 22, 13, 47");
		listControls("Ranker (multiple)", "0, 5, 13, 16, 20, 21, 38, 29, 39");
		listControls("Comments Stream", "0, 11, 54, 16, 17, 20, 21, 33, 47, 48, 13");
		listControls("Overall Perf. Table", "0, 11, 54, 30, 13, 16, 17, 20, 21, 36, 39, 38");
		listControls("Ranker (single)", "0, 5, 13, 54, 16, 20, 21, 38, 25, 39");
		listControls("SectionHeader", "");
		listControls("Topic Snapshot", "0, 16, 17, 5, 13, 44, 47, 47");
	}

	private static void listControls(String module, String controlList) {
		System.out.println(String.format("For Module [%s]", module));
		if (!controlList.trim().isEmpty()) {
			List<String> controls = Arrays.asList(controlList.split(","));
			controls.stream().forEach(id -> {
				System.out.println(String.format("   %s, %s", id.trim(), controlMap.get(id.trim())));
			});
		}
		System.out.println("--------------------");
	}
}
